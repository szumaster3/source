// 2056
[proc,script2056](component $component0, coord $coord1, string $string0, struct $struct2, component $component3, int $int4, int $int5, int $int6, int $int7)
if ($coord1 = null | _5215($coord1, %varcstring52) = false) {
	cc_deleteall($component0);
	if_sethide(true, $component0);
	return;
}
if_sethide(false, $component0);
if ($struct2 = null) {
	$struct2 = struct_280;
}
def_int $width8 = if_getwidth($component3);
def_int $height9 = if_getheight($component3);
def_int $x10 = coordx($coord1);
def_int $z11 = coordz($coord1);
def_int $int12 = scale($width8, calc($int6 - $int7), calc($x10 - $int7));
def_int $int13 = scale($height9, calc($int4 - $int5), calc($z11 - $int5));
$int12 = max(min($int12, $width8), 0);
$int13 = max(min($int13, $height9), 0);
$int12 = calc($int12 - $width8 / 2);
$int13 = calc($height9 / 2 - $int13);
if_setposition($int12, $int13, ^setpos_abs_centre, ^setpos_abs_centre, $component0);
def_int $int14 = struct_param($struct2, param_132);
def_int $int15 = struct_param($struct2, param_133);
def_int $int16 = -1;
if ($int12 <= calc(0 - $width8 / 2)) {
	if ($int13 <= calc(0 - $height9 / 2)) {
		$int16 = 3;
	} else if ($int13 >= calc($height9 / 2)) {
		$int16 = 1;
	} else {
		$int16 = 2;
	}
} else if ($int12 >= calc($width8 / 2)) {
	if ($int13 <= calc(0 - $height9 / 2)) {
		$int16 = 5;
	} else if ($int13 >= calc($height9 / 2)) {
		$int16 = 7;
	} else {
		$int16 = 6;
	}
} else if ($int13 <= calc(0 - $height9 / 2)) {
	$int16 = 4;
} else if ($int13 >= calc($height9 / 2)) {
	$int16 = 0;
}
def_int $int17 = 0;
def_int $int18 = 0;
def_int $int19 = 0;
def_int $int20 = 0;
def_string $op1 = "Scroll map";
def_string $string2 = "";
if (string_length($string0) > 0) {
	if ($component0 = worldmap:com_6) {
		$string2 = "Your position";
	} else {
		$string2 = removetags(~script2047($string0));
	}
	$op1 = "Scroll map:";
}
if ($int16 = -1) {
	~script2048($component0, 0, struct_param($struct2, param_130), $int14, $int15, 0, 0, 0, false, false, false, 0, $string2, $op1, $coord1);
	$int17 = calc($int15 / 2);
	$int18 = calc($int15 / 2);
	$int19 = calc($int14 / 2);
	$int20 = calc($int14 / 2);
	~script2048($component0, 1, struct_param($struct2, param_131), $int14, $int15, 0, 0, 0, false, false, false, 1, "", "", null);
} else {
	$int14 = struct_param($struct2, param_136);
	$int15 = struct_param($struct2, param_645);
	switch_int ($int16) {
		case 0 :
			~script2048($component0, 0, struct_param($struct2, param_134), $int14, $int15, 0, calc(0 - $int15 / 2), 49152, false, false, false, 0, $string2, $op1, $coord1);
			$int17 = $int15;
			$int18 = 0;
			$int19 = calc($int14 / 2);
			$int20 = calc($int14 / 2);
		case 1 :
			~script2048($component0, 0, struct_param($struct2, param_135), $int14, $int15, calc($int14 / 2), calc(0 - $int15 / 2), 32768, false, false, false, 0, $string2, $op1, $coord1);
			$int17 = $int15;
			$int18 = 0;
			$int19 = 0;
			$int20 = $int14;
		case 2 :
			~script2048($component0, 0, struct_param($struct2, param_134), $int14, $int15, calc($int14 / 2), 0, 32768, false, false, false, 0, $string2, $op1, $coord1);
			$int17 = calc($int15 / 2);
			$int18 = calc($int15 / 2);
			$int19 = 0;
			$int20 = $int14;
		case 3 :
			~script2048($component0, 0, struct_param($struct2, param_135), $int14, $int15, calc($int14 / 2), calc($int15 / 2), 16384, false, false, false, 0, $string2, $op1, $coord1);
			$int17 = 0;
			$int18 = $int15;
			$int19 = 0;
			$int20 = $int14;
		case 4 :
			~script2048($component0, 0, struct_param($struct2, param_134), $int14, $int15, 0, calc($int15 / 2), 16384, false, false, false, 0, $string2, $op1, $coord1);
			$int17 = 0;
			$int18 = $int15;
			$int19 = calc($int14 / 2);
			$int20 = calc($int14 / 2);
		case 5 :
			~script2048($component0, 0, struct_param($struct2, param_135), $int14, $int15, calc(0 - $int14 / 2), calc($int15 / 2), 0, false, false, false, 0, $string2, $op1, $coord1);
			$int17 = 0;
			$int18 = $int15;
			$int19 = $int14;
			$int20 = 0;
		case 6 :
			~script2048($component0, 0, struct_param($struct2, param_134), $int14, $int15, calc(0 - $int14 / 2), 0, 0, false, false, false, 0, $string2, $op1, $coord1);
			$int17 = calc($int15 / 2);
			$int18 = calc($int15 / 2);
			$int19 = $int14;
			$int20 = 0;
		case 7 :
			~script2048($component0, 0, struct_param($struct2, param_135), $int14, $int15, calc(0 - $int14 / 2), calc(0 - $int15 / 2), 49152, false, false, false, 0, $string2, $op1, $coord1);
			$int17 = $int15;
			$int18 = 0;
			$int19 = $int14;
			$int20 = 0;
	}
	~worldmap_hidegraphic($component0, 1);
}
def_int $int21 = 0;
def_int $int22 = 0;
def_int $int23 = 0;
def_int $int24 = 0;
def_int $int25 = 0;
def_int $int26 = 0;
def_int $int27 = 0;
def_int $int28 = 0;
def_graphic $graphic29 = null;
def_graphic $graphic30 = null;
def_graphic $graphic31 = null;
def_int $int32 = 0;
if (string_length($string0) > 0) {
	$int25 = struct_param($struct2, param_650);
	$int26 = struct_param($struct2, param_651);
	$graphic29 = struct_param($struct2, param_647);
	$graphic30 = struct_param($struct2, param_648);
	$graphic31 = struct_param($struct2, param_649);
	$int21 = calc(parawidth($string0, $width8, menu_font_small) + $int25 + $int25);
	$int22 = calc(paraheight($string0, $int21, menu_font_small) * 13 + 2 + $int26 + $int26);
	if (calc($int17 + $int22) < calc($int13 + $height9 / 2)) {
		$int24 = calc(0 - ($int17 + $int22 / 2));
	} else {
		$int24 = calc($int18 + $int22 / 2);
	}
	$int32 = calc($int12 + $width8 / 2 - $int21 / 2);
	if ($int32 <= 0) {
		$int23 = calc(0 - $int32);
	} else {
		$int32 = calc($int12 + $width8 / 2 + $int21 / 2);
		if ($int32 >= $width8) {
			$int23 = calc($width8 - $int32);
		}
	}
	$int27 = calc(($int21 - $int25) / 2);
	$int28 = calc(($int22 - $int26) / 2);
	~script2048($component0, 2, struct_param($struct2, param_646), calc($int21 - $int25 * 2), calc($int22 - $int26 * 2), $int23, $int24, 0, true, false, false, 0, "", "", null);
	~script2048($component0, 3, $graphic30, calc($int21 - $int25 * 2), $int26, $int23, calc($int24 - $int28), 0, true, false, false, 0, "", "", null);
	~script2048($component0, 4, $graphic30, calc($int21 - $int25 * 2), $int26, $int23, calc($int24 + $int28), 0, true, false, true, 0, "", "", null);
	~script2048($component0, 5, $graphic31, $int25, calc($int22 - $int26 * 2), calc($int23 - $int27), $int24, 0, true, false, false, 0, "", "", null);
	~script2048($component0, 6, $graphic31, $int25, calc($int22 - $int26 * 2), calc($int23 + $int27), $int24, 0, true, true, false, 0, "", "", null);
	~script2048($component0, 7, $graphic29, $int25, $int26, calc($int23 - $int27), calc($int24 - $int28), 0, false, false, false, 0, "", "", null);
	~script2048($component0, 8, $graphic29, $int25, $int26, calc($int23 + $int27), calc($int24 - $int28), 0, false, true, false, 0, "", "", null);
	~script2048($component0, 9, $graphic29, $int25, $int26, calc($int23 - $int27), calc($int24 + $int28), 0, false, false, true, 0, "", "", null);
	~script2048($component0, 10, $graphic29, $int25, $int26, calc($int23 + $int27), calc($int24 + $int28), 0, false, true, true, 0, "", "", null);
	~script2051($component0, 11, $string0, $int21, $int22, calc($int23 + 1), calc($int24 + 1), struct_param($struct2, param_653), "", "", null);
	~script2051($component0, 12, $string0, $int21, $int22, $int23, $int24, struct_param($struct2, param_652), $string2, $op1, $coord1);
} else {
	if (cc_find($component0, 2) = ^true) {
		cc_delete;
	}
	if (cc_find($component0, 3) = ^true) {
		cc_delete;
	}
	if (cc_find($component0, 4) = ^true) {
		cc_delete;
	}
	if (cc_find($component0, 5) = ^true) {
		cc_delete;
	}
	if (cc_find($component0, 6) = ^true) {
		cc_delete;
	}
	if (cc_find($component0, 7) = ^true) {
		cc_delete;
	}
	if (cc_find($component0, 8) = ^true) {
		cc_delete;
	}
	if (cc_find($component0, 9) = ^true) {
		cc_delete;
	}
	if (cc_find($component0, 10) = ^true) {
		cc_delete;
	}
	if (cc_find($component0, 11) = ^true) {
		cc_delete;
	}
	if (cc_find($component0, 12) = ^true) {
		cc_delete;
	}
}
def_int $int33 = 0;
def_int $int34 = 0;
if ($int23 < 0) {
	$int33 = max(calc(0 - ($int23 - $int21 / 2)), $int19);
} else if ($int21 > 0) {
	$int33 = max(calc($int23 + $int21 / 2), $int20);
} else {
	$int33 = max($int19, $int20);
}
if ($int24 <= 0) {
	$int34 = max(calc($int17 + $int22), $int18);
} else {
	$int34 = calc($int18 + $int22);
}
$int33, $int34 = calc($int33 * 2 + 2), calc($int34 * 2 + 2);
if_setsize($int33, $int34, ^setsize_abs, ^setsize_abs, $component0);
