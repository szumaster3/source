package content.global.skill.summoning.pet

import core.api.log
import core.game.node.entity.player.Player
import core.tools.Log
import shared.consts.Items
import shared.consts.NPCs

private val CAT_FOOD = intArrayOf(Items.ANCHOVIES_319, Items.BASS_365, Items.BUCKET_OF_MILK_1927, Items.CHOCOLATEY_MILK_1977, Items.COD_339, Items.HERRING_347, Items.LOBSTER_379, Items.MACKEREL_355, Items.MANTA_RAY_391, Items.MONKFISH_7946, Items.PIKE_351, Items.RAW_ANCHOVIES_321, Items.RAW_BASS_363, Items.RAW_COD_341, Items.RAW_HERRING_345, Items.RAW_LOBSTER_377, Items.RAW_MACKEREL_353, Items.RAW_MANTA_RAY_389, Items.RAW_MONKFISH_7944, Items.RAW_PIKE_349, Items.RAW_SALMON_331, Items.RAW_SARDINE_327, Items.RAW_SEA_TURTLE_395, Items.RAW_SHARK_383, Items.RAW_SHRIMPS_317, Items.RAW_SWORDFISH_371, Items.RAW_TROUT_335, Items.RAW_TUNA_359, Items.SALMON_329, Items.SARDINE_325, Items.SEA_TURTLE_397, Items.SHARK_385, Items.SHRIMPS_315, Items.SWORDFISH_373, Items.TROUT_333, Items.TUNA_361)
private val DOG_FOOD = intArrayOf(Items.RAW_BEEF_2132, Items.RAW_RAT_MEAT_2134, Items.RAW_BEAR_MEAT_2136, Items.RAW_CHICKEN_2138, Items.RAW_YAK_MEAT_10816, Items.RAW_BEAST_MEAT_9986, Items.RAW_BIRD_MEAT_9978, Items.BONES_526)
private val PLATYPUS_FOOD = intArrayOf(Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129, Items.RAW_ANCHOVIES_321, Items.RAW_BASS_363, Items.RAW_COD_341, Items.RAW_HERRING_345, Items.RAW_LOBSTER_377, Items.RAW_MACKEREL_353, Items.RAW_MANTA_RAY_389, Items.RAW_MONKFISH_7944, Items.RAW_PIKE_349, Items.RAW_SALMON_331, Items.RAW_SARDINE_327, Items.RAW_SEA_TURTLE_395, Items.RAW_SHARK_383, Items.RAW_SHRIMPS_317, Items.RAW_SWORDFISH_371, Items.RAW_TROUT_335, Items.RAW_TUNA_359)
private val RACCOON_FOOD = intArrayOf(Items.RAW_ANCHOVIES_321, Items.RAW_BASS_363, Items.RAW_COD_341, Items.RAW_HERRING_345, Items.RAW_LOBSTER_377, Items.RAW_MACKEREL_353, Items.RAW_MANTA_RAY_389, Items.RAW_MONKFISH_7944, Items.RAW_PIKE_349, Items.RAW_SALMON_331, Items.RAW_SARDINE_327, Items.RAW_SEA_TURTLE_395, Items.RAW_SHARK_383, Items.RAW_SHRIMPS_317, Items.RAW_SWORDFISH_371, Items.RAW_TROUT_335, Items.RAW_TUNA_359, Items.RAW_BEEF_2132, Items.RAW_RAT_MEAT_2134, Items.RAW_BEAR_MEAT_2136, Items.RAW_CHICKEN_2138, Items.RAW_YAK_MEAT_10816, Items.RAW_BEAST_MEAT_9986, Items.RAW_BIRD_MEAT_9978)
private val DRAGON_FOOD = intArrayOf(Items.RAW_BEEF_2132, Items.RAW_RAT_MEAT_2134, Items.RAW_BEAR_MEAT_2136, Items.RAW_CHICKEN_2138, Items.RAW_YAK_MEAT_10816, Items.RAW_BEAST_MEAT_9986, Items.RAW_BIRD_MEAT_9978, Items.RAW_ANCHOVIES_321, Items.RAW_BASS_363, Items.RAW_COD_341, Items.RAW_HERRING_345, Items.RAW_LOBSTER_377, Items.RAW_MACKEREL_353, Items.RAW_MANTA_RAY_389, Items.RAW_MONKFISH_7944, Items.RAW_PIKE_349, Items.RAW_SALMON_331, Items.RAW_SARDINE_327, Items.RAW_SEA_TURTLE_395, Items.RAW_SHARK_383, Items.RAW_SHRIMPS_317, Items.RAW_SWORDFISH_371, Items.RAW_TROUT_335, Items.RAW_TUNA_359)
private val FOOD = intArrayOf(Items.RAW_ANCHOVIES_321, Items.RAW_BASS_363, Items.RAW_COD_341, Items.RAW_HERRING_345, Items.RAW_LOBSTER_377, Items.RAW_MACKEREL_353, Items.RAW_MANTA_RAY_389, Items.RAW_MONKFISH_7944, Items.RAW_PIKE_349, Items.RAW_SALMON_331, Items.RAW_SARDINE_327, Items.RAW_SEA_TURTLE_395, Items.RAW_SHARK_383, Items.RAW_SHRIMPS_317, Items.RAW_SWORDFISH_371, Items.RAW_TROUT_335, Items.RAW_TUNA_359)

/**
 * Represents the Pets.
 */
enum class Pets(
    @JvmField val babyItemId: Int,
    @JvmField val grownItemId: Int,
    @JvmField val overgrownItemId: Int,
    @JvmField val babyNpcId: Int,
    @JvmField val grownNpcId: Int,
    @JvmField val overgrownNpcId: Int,
    @JvmField val growthRate: Double,
    @JvmField val summoningLevel: Int,
    @JvmField vararg val food: Int
) {
    GREY_AND_BLACK_CAT(Items.PET_KITTEN_1555, Items.PET_CAT_1561, Items.OVERGROWN_CAT_1567, NPCs.KITTEN_761, NPCs.CAT_768, NPCs.OVERGROWN_CAT_774, 0.0154320987654321, 0, *CAT_FOOD),
    WHITE_CAT(Items.PET_KITTEN_1556, Items.PET_CAT_1562, Items.OVERGROWN_CAT_1568, NPCs.KITTEN_762, NPCs.CAT_769, NPCs.OVERGROWN_CAT_775, 0.0154320987654321, 0, *CAT_FOOD),
    BROWN_CAT(Items.PET_KITTEN_1557, Items.PET_CAT_1563, Items.OVERGROWN_CAT_1569, NPCs.KITTEN_763, NPCs.CAT_770, NPCs.OVERGROWN_CAT_776, 0.0154320987654321, 0, *CAT_FOOD),
    BLACK_CAT(Items.PET_KITTEN_1558, Items.PET_CAT_1564, Items.OVERGROWN_CAT_1570, NPCs.KITTEN_764, NPCs.CAT_771, NPCs.OVERGROWN_CAT_777, 0.0154320987654321, 0, *CAT_FOOD),
    GREY_AND_BROWN_CAT(Items.PET_KITTEN_1559, Items.PET_CAT_1565, Items.OVERGROWN_CAT_1571, NPCs.KITTEN_765, NPCs.CAT_772, NPCs.OVERGROWN_CAT_778, 0.0154320987654321, 0, *CAT_FOOD),
    GREY_AND_BLUE(Items.PET_KITTEN_1560, Items.PET_CAT_1566, Items.OVERGROWN_CAT_1572, NPCs.KITTEN_766, NPCs.CAT_773, NPCs.OVERGROWN_CAT_779, 0.0154320987654321, 0, *CAT_FOOD),
    PURPLE_CAT(Items.PET_KITTEN_14089, Items.PET_CAT_14090, Items.OVERGROWN_CAT_14092, NPCs.KITTEN_8217, NPCs.CAT_8214, NPCs.OVERGROWN_CAT_8216, 0.0154320987654321, 0, *CAT_FOOD),
    CLOCKWORK_CAT(Items.CLOCKWORK_CAT_7771, Items.CLOCKWORK_CAT_7772, -1, NPCs.CLOCKWORK_CAT_3598, -1, -1, 0.0, 0),
    HELLCAT(Items.HELL_KITTEN_7583, Items.HELL_CAT_7582, Items.OVERGROWN_HELLCAT_7581, NPCs.HELL_KITTEN_3505, NPCs.HELLCAT_3504, NPCs.OVERGROWN_HELLCAT_3503, 0.0154320987654321, 0, *CAT_FOOD),
    WHITE_BULLDOG(Items.BULLDOG_PUPPY_12522, Items.BULLDOG_12523, -1, NPCs.BULLDOG_PUPPY_6969, NPCs.BULLDOG_6968, -1, 0.0033333333333333, 4, *DOG_FOOD),
    BLACK_BULLDOG(Items.BULLDOG_PUPPY_12720, Items.BULLDOG_12721, -1, NPCs.BULLDOG_PUPPY_7259, NPCs.BULLDOG_7257, -1, 0.0033333333333333, 4, *DOG_FOOD),
    GREY_BULLDOG(Items.BULLDOG_PUPPY_12722, Items.BULLDOG_12723, -1, NPCs.BULLDOG_PUPPY_7260, NPCs.BULLDOG_7258, -1, 0.0033333333333333, 4, *DOG_FOOD),
    BLACK_DALMATIAN(Items.DALMATIAN_PUPPY_12518, Items.DALMATIAN_12519, -1, NPCs.DALMATIAN_PUPPY_6964, NPCs.DALMATIAN_6965, -1, 0.0033333333333333, 4, *DOG_FOOD),
    BLUE_DALMATIAN(Items.DALMATIAN_PUPPY_12712, Items.DALMATIAN_12713, -1, NPCs.DALMATIAN_PUPPY_7249, NPCs.DALMATIAN_7250, -1, 0.0033333333333333, 4, *DOG_FOOD),
    RED_DALMATIAN(Items.DALMATIAN_PUPPY_12714, Items.DALMATIAN_12715, -1, NPCs.DALMATIAN_PUPPY_7251, NPCs.DALMATIAN_7252, -1, 0.0033333333333333, 4, *DOG_FOOD),
    LIGHT_BROWN_GREYHOUND(Items.GREYHOUND_PUPPY_12514, Items.GREYHOUND_12515, -1, NPCs.GREYHOUND_PUPPY_6960, NPCs.GREYHOUND_6961, -1, 0.0033333333333333, 4, *DOG_FOOD),
    GREY_GREYHOUND(Items.GREYHOUND_PUPPY_12704, Items.GREYHOUND_12705, -1, NPCs.GREYHOUND_PUPPY_7241, NPCs.GREYHOUND_7242, -1, 0.0033333333333333, 4, *DOG_FOOD),
    DARK_BROWN_GREYHOUND(Items.GREYHOUND_PUPPY_12706, Items.GREYHOUND_12707, -1, NPCs.GREYHOUND_PUPPY_7243, NPCs.GREYHOUND_7244, -1, 0.0033333333333333, 4, *DOG_FOOD),
    YELLOW_LABRADOR(Items.LABRADOR_PUPPY_12516, Items.LABRADOR_12517, -1, NPCs.LABRADOR_PUPPY_6962, NPCs.LABRADOR_6963, -1, 0.0033333333333333, 4, *DOG_FOOD),
    BLACK_LABRADOR(Items.LABRADOR_PUPPY_12708, Items.LABRADOR_12709, -1, NPCs.LABRADOR_PUPPY_7245, NPCs.LABRADOR_7246, -1, 0.0033333333333333, 4, *DOG_FOOD),
    GREY_LABRADOR(Items.LABRADOR_PUPPY_12710, Items.LABRADOR_12711, -1, NPCs.LABRADOR_PUPPY_7247, NPCs.LABRADOR_7248, -1, 0.0033333333333333, 4, *DOG_FOOD),
    GREY_SHEEPDOG(Items.SHEEPDOG_PUPPY_12520, Items.SHEEPDOG_12521, -1, NPCs.SHEEPDOG_PUPPY_6966, NPCs.SHEEPDOG_6967, -1, 0.0033333333333333, 4, *DOG_FOOD),
    BLACK_SHEEPDOG(Items.SHEEPDOG_PUPPY_12716, Items.SHEEPDOG_12717, -1, NPCs.SHEEPDOG_PUPPY_7253, NPCs.SHEEPDOG_7254, -1, 0.0033333333333333, 4, *DOG_FOOD),
    YELLOW_SHEEPDOG(Items.SHEEPDOG_PUPPY_12718, Items.SHEEPDOG_12719, -1, NPCs.SHEEPDOG_PUPPY_7255, NPCs.SHEEPDOG_7256, -1, 0.0033333333333333, 4, *DOG_FOOD),
    TAN_TERRIER(Items.TERRIER_PUPPY_12512, Items.TERRIER_12513, -1, NPCs.TERRIER_PUPPY_6958, NPCs.TERRIER_6959, -1, 0.0033333333333333, 4, *DOG_FOOD),
    GREY_TERRIER(Items.TERRIER_PUPPY_12700, Items.TERRIER_12701, -1, NPCs.TERRIER_PUPPY_7237, NPCs.TERRIER_7238, -1, 0.0033333333333333, 4, *DOG_FOOD),
    BLACK_TERRIER(Items.TERRIER_PUPPY_12702, Items.TERRIER_12703, -1, NPCs.TERRIER_PUPPY_7239, NPCs.TERRIER_7240, -1, 0.0033333333333333, 4, *DOG_FOOD),
    ORANGE_GECKO(Items.BABY_GECKO_12488, Items.GECKO_12489, -1, NPCs.BABY_GECKO_6915, NPCs.GECKO_6916, -1, 0.005, 10, Items.FLIES_12125, Items.BEETLE_BITS_12127),
    SPECKLED_GECKO(Items.BABY_GECKO_12738, Items.GECKO_12742, -1, NPCs.BABY_GECKO_7277, NPCs.GECKO_7281, -1, 0.005, 10, Items.FLIES_12125, Items.BEETLE_BITS_12127),
    GREEN_GECKO(Items.BABY_GECKO_12739, Items.GECKO_12743, -1, NPCs.BABY_GECKO_7278, NPCs.GECKO_7282, -1, 0.005, 10, Items.FLIES_12125, Items.BEETLE_BITS_12127),
    RED_GECKO(Items.BABY_GECKO_12740, Items.GECKO_12744, -1, NPCs.BABY_GECKO_7279, NPCs.GECKO_7283, -1, 0.005, 10, Items.FLIES_12125, Items.BEETLE_BITS_12127),
    BLUE_GECKO(Items.BABY_GECKO_12741, Items.GECKO_12745, -1, NPCs.BABY_GECKO_7280, NPCs.GECKO_7284, -1, 0.005, 10, Items.FLIES_12125, Items.BEETLE_BITS_12127),
    BROWN_PLATYPUS(Items.BABY_PLATYPUS_12551, Items.PLATYPUS_12548, -1, NPCs.BABY_PLATYPUS_7018, NPCs.PLATYPUS_7015, -1, 0.0046296296296296, 10, *PLATYPUS_FOOD),
    GREY_PLATYPUS(Items.BABY_PLATYPUS_12552, Items.PLATYPUS_12549, -1, NPCs.BABY_PLATYPUS_7019, NPCs.PLATYPUS_7016, -1, 0.0046296296296296, 10, *PLATYPUS_FOOD),
    TAN_PLATYPUS(Items.BABY_PLATYPUS_12553, Items.PLATYPUS_12550, -1, NPCs.BABY_PLATYPUS_7020, NPCs.PLATYPUS_7017, -1, 0.0046296296296296, 10, *PLATYPUS_FOOD),
    GREY_PENGUIN(Items.BABY_PENGUIN_12481, Items.PENGUIN_12482, -1, NPCs.BABY_PENGUIN_6908, NPCs.PENGUIN_6909, -1, 0.0046296296296296, 30, *FOOD),
    BROWN_PENGUIN(Items.BABY_PENGUIN_12763, Items.PENGUIN_12762, -1, NPCs.BABY_PENGUIN_7313, NPCs.PENGUIN_7314, -1, 0.0046296296296296, 30, *FOOD),
    BLUE_PENGUIN(Items.BABY_PENGUIN_12765, Items.PENGUIN_12764, -1, NPCs.BABY_PENGUIN_7316, NPCs.PENGUIN_7317, -1, 0.0046296296296296, 30, *FOOD),
    RED_GIANT_CRAB(Items.BABY_GIANT_CRAB_12500, Items.GIANT_CRAB_12501, -1, NPCs.BABY_GIANT_CRAB_6947, NPCs.GIANT_CRAB_6948, -1, 0.0069444444444444, 40, *FOOD),
    BEIGE_GIANT_CRAB(Items.BABY_GIANT_CRAB_12746, Items.GIANT_CRAB_12747, -1, NPCs.BABY_GIANT_CRAB_7293, NPCs.GIANT_CRAB_7294, -1, 0.0069444444444444, 40, *FOOD),
    GREY_GIANT_CRAB(Items.BABY_GIANT_CRAB_12748, Items.GIANT_CRAB_12749, -1, NPCs.BABY_GIANT_CRAB_7295, NPCs.GIANT_CRAB_7296, -1, 0.0069444444444444, 40, *FOOD),
    RED_WITH_GREENS_SPOTS_GIANT_CRAB(Items.BABY_GIANT_CRAB_12750, Items.GIANT_CRAB_12751, -1, NPCs.BABY_GIANT_CRAB_7297, NPCs.GIANT_CRAB_7298, -1, 0.0069444444444444, 40, *FOOD),
    GOLDEN_GIANT_CRAB(Items.BABY_GIANT_CRAB_12752, Items.GIANT_CRAB_12753, -1, NPCs.BABY_GIANT_CRAB_7299, NPCs.GIANT_CRAB_7300, -1, 0.0069444444444444, 40, *FOOD),
    RAVEN(Items.RAVEN_CHICK_12484, Items.RAVEN_12485, -1, NPCs.RAVEN_CHICK_6911, NPCs.RAVEN_6912, -1, 0.00698888, 50, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    CRESTED_RAVEN(Items.RAVEN_CHICK_12724, Items.RAVEN_12725, -1, NPCs.RAVEN_CHICK_7261, NPCs.RAVEN_7262, -1, 0.00698888, 50, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    YELLOW_BEAK_RAVEN(Items.RAVEN_CHICK_12726, Items.RAVEN_12727, -1, NPCs.RAVEN_CHICK_7263, NPCs.RAVEN_7264, -1, 0.00698888, 50, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    CRESTED_YELLOW_BEAK_RAVEN(Items.RAVEN_CHICK_12728, Items.RAVEN_12729, -1, NPCs.RAVEN_CHICK_7265, NPCs.RAVEN_7266, -1, 0.00698888, 50, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    RED_RAVEN(Items.RAVEN_CHICK_12730, Items.RAVEN_12731, -1, NPCs.RAVEN_CHICK_7267, NPCs.RAVEN_7268, -1, 0.00698888, 50, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    CRESTED_RED_RAVEN(Items.RAVEN_CHICK_12732, Items.RAVEN_12733, -1, NPCs.RAVEN_CHICK_7269, NPCs.RAVEN_7270, -1, 0.00698888, 50, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    LIGHT_GREY_SQUIRREL(Items.BABY_SQUIRREL_12490, Items.SQUIRREL_12491, -1, NPCs.BABY_SQUIRREL_6919, NPCs.SQUIRREL_6920, -1, 0.0071225071225071, 60, Items.NUTS_12130),
    LIGHT_BROWN_SQUIRREL(Items.BABY_SQUIRREL_12754, Items.SQUIRREL_12755, -1, NPCs.BABY_SQUIRREL_7301, NPCs.SQUIRREL_7302, -1, 0.0071225071225071, 60, Items.NUTS_12130),
    WHITE_SQUIRREL(Items.BABY_SQUIRREL_12756, Items.SQUIRREL_12757, -1, NPCs.BABY_SQUIRREL_7303, NPCs.SQUIRREL_7304, -1, 0.0071225071225071, 60, Items.NUTS_12130),
    DARK_GREY_SQUIRREL(Items.BABY_SQUIRREL_12758, Items.SQUIRREL_12759, -1, NPCs.BABY_SQUIRREL_7305, NPCs.SQUIRREL_7306, -1, 0.0071225071225071, 60, Items.NUTS_12130),
    DARK_BROWN_SQUIRREL(Items.BABY_SQUIRREL_12760, Items.SQUIRREL_12761, -1, NPCs.BABY_SQUIRREL_7307, NPCs.SQUIRREL_7308, -1, 0.0071225071225071, 60, Items.NUTS_12130),
    SARADOMIN_OWL(Items.SARADOMIN_CHICK_12503, Items.SARADOMIN_BIRD_12504, Items.SARADOMIN_OWL_12505, NPCs.SARADOMIN_CHICK_6949, NPCs.SARADOMIN_BIRD_6950, NPCs.SARADOMIN_OWL_6951, 0.0069444444444444, 70, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    ZAMORAK_HAWK(Items.ZAMORAK_CHICK_12506, Items.ZAMORAK_BIRD_12507, Items.ZAMORAK_HAWK_12508, NPCs.ZAMORAK_CHICK_6952, NPCs.ZAMORAK_BIRD_6953, NPCs.ZAMORAK_HAWK_6954, 0.0069444444444444, 70, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    GUTHIX_RAPTOR(Items.GUTHIX_CHICK_12509, Items.GUTHIX_BIRD_12510, Items.GUTHIX_RAPTOR_12511, NPCs.GUTHIX_CHICK_6955, NPCs.GUTHIX_BIRD_6956, NPCs.GUTHIX_RAPTOR_6957, 0.0069444444444444, 70, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    GREY_RACCOON(Items.BABY_RACCOON_12486, Items.RACCOON_12487, -1, NPCs.BABY_RACCOON_6913, NPCs.RACCOON_6914, -1, 0.0029444444444444, 80, *RACCOON_FOOD),
    BROWN_RACCOON(Items.BABY_RACCOON_12734, Items.RACCOON_12735, -1, NPCs.BABY_RACCOON_7271, NPCs.RACCOON_7272, -1, 0.0029444444444444, 80, *RACCOON_FOOD),
    RED_RACCOON(Items.BABY_RACCOON_12736, Items.RACCOON_12737, -1, NPCs.BABY_RACCOON_7273, NPCs.RACCOON_7274, -1, 0.0029444444444444, 80, *RACCOON_FOOD),
    GREY_VULTURE(Items.VULTURE_CHICK_12498, Items.VULTURE_12499, -1, NPCs.VULTURE_CHICK_6945, NPCs.VULTURE_6946, -1, 0.0078, 85, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    GREY_WITH_STRIPED_BEAK_VULTURE(Items.VULTURE_CHICK_12766, Items.VULTURE_12767, -1, NPCs.VULTURE_CHICK_7319, NPCs.VULTURE_7320, -1, 0.0078, 85, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    BROWN_VULTURE(Items.VULTURE_CHICK_12768, Items.VULTURE_12769, -1, NPCs.VULTURE_CHICK_7321, NPCs.VULTURE_7322, -1, 0.0078, 85, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    BROWN_WITH_STRIPED_BEAK_VULTURE(Items.VULTURE_CHICK_12770, Items.VULTURE_12771, -1, NPCs.VULTURE_CHICK_7323, NPCs.VULTURE_7324, -1, 0.0078, 85, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    PINK_VULTURE(Items.VULTURE_CHICK_12772, Items.VULTURE_12773, -1, NPCs.VULTURE_CHICK_7325, NPCs.VULTURE_7326, -1, 0.0078, 85, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    PINK_WITH_STRIPED_BEAK_VULTURE(Items.VULTURE_CHICK_12774, Items.VULTURE_12775, -1, NPCs.VULTURE_CHICK_7327, NPCs.VULTURE_7328, -1, 0.0078, 85, Items.FISHING_BAIT_313, Items.GROUND_FISHING_BAIT_12129),
    CHAMELEON(Items.BABY_CHAMELEON_12492, Items.CHAMELEON_12493, -1, NPCs.BABY_CHAMELEON_6922, NPCs.CHAMELEON_6923, -1, 0.0069444444444444, 90, Items.FLIES_12125),
    GREY_AND_WHITE_MONKEY(Items.BABY_MONKEY_12496, Items.MONKEY_12497, -1, NPCs.BABY_MONKEY_6942, NPCs.MONKEY_6943, -1, 0.0069444444444444, 95, Items.BANANA_1963),
    BROWN_AND_BEIGE_MONKEY(Items.BABY_MONKEY_12682, Items.MONKEY_12683, -1, NPCs.BABY_MONKEY_7210, NPCs.MONKEY_7211, -1, 0.0069444444444444, 95, Items.BANANA_1963),
    BLACK_AND_BROWN_MONKEY(Items.BABY_MONKEY_12684, Items.MONKEY_12685, -1, NPCs.BABY_MONKEY_7212, NPCs.MONKEY_7213, -1, 0.0069444444444444, 95, Items.BANANA_1963),
    BEIGE_MONKEY(Items.BABY_MONKEY_12686, Items.MONKEY_12687, -1, NPCs.BABY_MONKEY_7214, NPCs.MONKEY_7215, -1, 0.0069444444444444, 95, 1963),
    TAN_AND_BEIGE_MONKEY(Items.BABY_MONKEY_12688, Items.MONKEY_12689, -1, NPCs.BABY_MONKEY_7216, NPCs.MONKEY_7217, -1, 0.0069444444444444, 95, Items.BANANA_1963),
    GREY_AND_BEIGE_MONKEY(Items.BABY_MONKEY_12690, Items.MONKEY_12691, -1, NPCs.BABY_MONKEY_7218, NPCs.MONKEY_7219, -1, 0.0069444444444444, 95, Items.BANANA_1963),
    BLUE_AND_GREY_MONKEY(Items.BABY_MONKEY_12692, Items.MONKEY_12693, -1, NPCs.BABY_MONKEY_7220, NPCs.MONKEY_7221, -1, 0.0069444444444444, 95, Items.BANANA_1963),
    BLACK_AND_WHITE_MONKEY(Items.BABY_MONKEY_12694, Items.MONKEY_12695, -1, NPCs.BABY_MONKEY_7222, NPCs.MONKEY_7223, -1, 0.0069444444444444, 95, Items.BANANA_1963),
    ORANGE_MONKEY(Items.BABY_MONKEY_12696, Items.MONKEY_12697, -1, NPCs.BABY_MONKEY_7224, NPCs.MONKEY_7225, -1, 0.0069444444444444, 95, Items.BANANA_1963),
    BLUE_AND_WHITE_MONKEY(Items.BABY_MONKEY_12698, Items.MONKEY_12699, -1, NPCs.BABY_MONKEY_7226, NPCs.MONKEY_7227, -1, 0.0069444444444444, 95, Items.BANANA_1963),
    RED_BABY_DRAGON(Items.HATCHLING_DRAGON_12469, Items.BABY_DRAGON_12470, -1, NPCs.HATCHLING_DRAGON_6900, NPCs.BABY_DRAGON_6901, -1, 0.0052, 99, *DRAGON_FOOD),
    BLUE_BABY_DRAGON(Items.HATCHLING_DRAGON_12471, Items.BABY_DRAGON_12472, -1, NPCs.HATCHLING_DRAGON_6902, NPCs.BABY_DRAGON_6903, -1, 0.0052, 99, *DRAGON_FOOD),
    GREEN_BABY_DRAGON(Items.HATCHLING_DRAGON_12473, Items.BABY_DRAGON_12474, -1, NPCs.HATCHLING_DRAGON_6904, NPCs.BABY_DRAGON_6905, -1, 0.0052, 99, *DRAGON_FOOD),
    BLACK_BABY_DRAGON(Items.HATCHLING_DRAGON_12475, Items.BABY_DRAGON_12476, -1, NPCs.HATCHLING_DRAGON_6906, NPCs.BABY_DRAGON_6907, -1, 0.0052, 99, *DRAGON_FOOD),
    EX_EX_PARROT(Items.EX_EX_PARROT_13335, -1, -1, NPCs.EX_EX_PARROT_7844, -1, -1, 0.0, 71, Items.ROCK_FRAGMENTS_13379),
    EEK(Items.SPIDER_14073, -1, -1, -1, -1, -1, 0.0, -1, -1),
    BROAV(Items.BROAV_14533, -1, -1, NPCs.BROAV_8491, -1, -1, 0.0, 23, Items.MORT_MYRE_FUNGUS_2970),
    CUTE_PHOENIX_EGGLING(Items.PHOENIX_EGGLING_14627, -1, -1, NPCs.PHOENIX_EGGLING_8578, -1, -1, 0.0, 72, Items.ASHES_592),
    MEAN_PHOENIX_EGGLING(Items.PHOENIX_EGGLING_14626, -1, -1, NPCs.PHOENIX_EGGLING_8577, -1, -1, 0.0, 72, Items.ASHES_592),

    ;

    /**
     * Gets the NPC id for the pet item.
     *
     * @param itemId item id.
     * @return npc id, or -1 if not found.
     */
    fun getNpcId(itemId: Int): Int {
        if (itemId == babyItemId) {
            return babyNpcId
        }
        if (itemId == grownItemId) {
            return grownNpcId
        }
        if (itemId == overgrownItemId) {
            return overgrownNpcId
        }
        log(this.javaClass, Log.ERR, "Could not locate NPC ID for pet item $itemId")
        return -1
    }

    /**
     * Gets the item id of the pet's next growth stage.
     *
     * @param itemId Current item id.
     * @return next item id, or -1 if none.
     */
    fun getNextStageItemId(itemId: Int): Int {
        if (itemId == babyItemId) {
            return grownItemId
        }
        if (itemId == grownItemId) {
            return overgrownItemId
        }
        return -1
    }

    /**
     * Checks if the given item id represents a kitten.
     *
     * @param id The item to check.
     * @return `true` if kitten, else `false`.
     */
    fun isKitten(id: Int): Boolean {
        return when (this) {
            GREY_AND_BLACK_CAT, WHITE_CAT, BROWN_CAT, BLACK_CAT, GREY_AND_BROWN_CAT, GREY_AND_BLUE, PURPLE_CAT, HELLCAT -> id == babyItemId
            else -> false
        }
    }

    companion object {
        private val babyPets: MutableMap<Int, Pets> = HashMap()
        private val grownPets: MutableMap<Int, Pets> = HashMap()
        private val overgrownPets: MutableMap<Int, Pets> = HashMap()

        init {
            for (pet in values()) {
                babyPets[pet.babyItemId] = pet
                if (pet.grownItemId > 0) {
                    grownPets[pet.grownItemId] = pet
                    if (pet.overgrownItemId > 0) {
                        overgrownPets[pet.overgrownItemId] = pet
                    }
                }
            }
        }

        /**
         * Gets the [Pets] instance for the given item id.
         *
         * @param itemId Pet item id.
         * @return Matching [Pets], or `null` if not found.
         */
        @JvmStatic
        fun forId(itemId: Int): Pets? {
            var pet = babyPets[itemId]
            if (pet == null) {
                pet = grownPets[itemId]
                if (pet == null) {
                    return overgrownPets[itemId]
                }
                return pet
            }
            return pet
        }

        /**
         * Checks if the player holds any pet item.
         *
         * @param player The player.
         * @return `true` if any pet found, else `false`.
         */
        fun hasPet(player: Player): Boolean {
            for (itemId in babyPets.keys) {
                if (player.inventory.containsAtLeastOneItem(itemId)) {
                    return true
                }
            }
            for (itemId in grownPets.keys) {
                if (player.inventory.containsAtLeastOneItem(itemId)) {
                    return true
                }
            }
            for (itemId in overgrownPets.keys) {
                if (player.inventory.containsAtLeastOneItem(itemId)) {
                    return true
                }
            }
            return false
        }
    }
}